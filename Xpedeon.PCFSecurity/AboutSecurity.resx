<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cxImage1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAClAVQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2XNGabRVXIHZozTaK
        LgOzRmm0UXAdmjNNoouA7NGabRRcB2aM02ii4Ds0ZptFFwHZozTaKLgOzRmm0UXAdmjNNoouA7NGabRR
        cB2aM02ii4Ds0ZptFFwHZozTaKLgOzRmm0UXAdmjNNoouA7NGabRkeo/Oi4Ds0ZpuQehB+hoouA7NGab
        RRcB2aM02ii4Ds0ZptFFwHZoptFFwEzRmmZozQMfmjNMzRmgB+aM0zNGaAH5ozTM0ZoAfmjNMzRmgB+a
        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
</value>
  </data>
</root>